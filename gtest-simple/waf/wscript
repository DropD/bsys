from waflib.Build import BuildContext
import pathlib

APPNAME = "gtest-simple"
VERSION = "1.0"

GTEST_COMMIT = "609281088cfefc76f9d0ce82e1ff6c30cc3591e5"

top = '.'
out = "build"
gtest_top = top + f"/googletest-{GTEST_COMMIT}/googletest"
includes = [
    top + "/include",
    gtest_top + "/include",
    gtest_top,
]
cflags = ["--std=c++2a"]

def options(ctx):
    ctx.load("compiler_cxx")

def configure(ctx):
    ctx.load("compiler_cxx")


def build(ctx):
    ctx.program(
        "main",
        target="main",
        source="src/main.cpp",
        includes=includes,
        cxxflags=cflags
    )
    ctx.program(
        "testapp",
        target="square_plus_one_test",
        source=[
            "tests/test_square_plus_one.cpp",
            "/googletest-609281088cfefc76f9d0ce82e1ff6c30cc3591e5/googletest/src/gtest-all.cc",
            "/googletest-609281088cfefc76f9d0ce82e1ff6c30cc3591e5/googletest/src/gtest_main.cc",
        ],
        includes=includes,
        cxxflags=cflags,
    )


def run_test(ctx):
    test_path = pathlib.Path(ctx.out_dir) / "square_plus_one_test"
    ctx(rule="./${SRC}", source="square_plus_one_test", always=True)


def test(ctx):
    from waflib import Options
    Options.commands = ["build", "run_test"] + Options.commands


class TestContext(BuildContext):
    cmd = "test"
    fun = "test"


class RunTestContext(BuildContext):
    cmd = "run_test"
    fun = "run_test"
